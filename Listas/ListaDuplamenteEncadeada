public class ListaDuplamenteEnc<T> {
    private No<T> inicio;
    private No<T> ultimo;
    private int tamanho ;

    

    public void adiciona(T elemento) {
        No<T> no = new No<T>(elemento);
        if (this.tamanho == 0) {
            this.inicio = no;
        } else {
            this.ultimo.setProximo(no);
        }
        this.ultimo = no;
        this.tamanho++;
    }

    public void inserirInicio(T elemento){
        No no = new No(elemento);
        no.setAnterior(null);
        no.setProximo(inicio);
        if (inicio != null){
            inicio.setAnterior(no);
        }
        inicio = no;
        if (tamanho == 0){
            ultimo = inicio;
        }
        tamanho++;
    }

    public void inserirFim(T elemento){
        No no =  new No(elemento);
        no.setProximo(null);
        no.setAnterior(ultimo);
        if(ultimo != null){
            ultimo.setProximo(no);
        }
        ultimo = no;
        if(tamanho == 0){
            inicio = ultimo;
        }
        tamanho++;
    }

    public void inserirMeio(int indice, T elemento){
        if (indice<=0){
            inserirInicio(elemento);
        }else if(indice>=tamanho){
            inserirFim(elemento);
        }else {
            No aux = inicio;
            for (int i = 0; i < indice-1;i++){
                aux = aux.getProximo();
            }
            No no = new No(elemento);
            no.setAnterior(aux);
            no.setProximo(aux.getProximo());
            aux.setProximo(no);
            no.getProximo().setAnterior(no);
            tamanho++;
        }
    }

    public T retirarInicio(){
        if(inicio==null){
            return null;
        }
        T aux = inicio.getElemento();
        inicio = inicio.getProximo();
        if (inicio!=null){
            inicio.setAnterior(null);
        }else {
            ultimo = null;
        }
        tamanho--;
        return aux;
    }

    public T retirarFim(){
        if (ultimo == null){
            return null;
        }
        T out = ultimo.getElemento();
        ultimo = ultimo.getAnterior();
        if(ultimo != null){
            ultimo.setProximo(null);
        }else {
            inicio = null;
        }
        tamanho--;
        return out;
    }

    public T retirarMeio(int indice){
        if(indice < 0 || indice >= tamanho || inicio == null){
            return null;
        }else if(indice == 0){
            return retirarInicio();
        }else if(indice == tamanho-1){
            return retirarFim();
        }
        No aux = inicio;
        for (int i = 0; i < indice; i ++){
            aux = aux.getProximo();
        }
        if (aux.getAnterior() != null){
            aux.getAnterior().setProximo(aux.getProximo());
        }
        if (aux.getProximo() != null){
            aux.getProximo().setAnterior(aux.getAnterior());
        }
        tamanho--;
        return ((T) aux.getElemento());
    }

    public void limpa() {

        for (No<T> atual = this.inicio; atual != null;) {
            No<T> proximo = atual.getProximo();
            atual.setElemento(null);
            atual.setProximo(null);
            atual = proximo;
        }

        this.inicio = null;
        this.ultimo = null;
        this.tamanho = 0;
    }

    public String imprimir(){
        String str= "(" + tamanho + ")";
        No local = inicio;
        while (local != null){
            str += local.getElemento() + " ";
            local = local.getProximo();
        }
        return str;
    }

    @Override
    public String toString() {

        // [1, 2, 3, 4]

        if (this.tamanho == 0) {
            return "[]";
        }

        StringBuilder builder = new StringBuilder("[");
        // builder.append("ListaDuplamenteEnc [inicio=").append(inicio).append("]");

        No<T> atual = this.inicio;
        for (int i = 0; i < this.tamanho - 1; i++) {
            builder.append(atual.getElemento()).append(",");
            atual = atual.getProximo();
        }
        builder.append(atual.getElemento()).append("]");
        /*
         * builder.append(atual.getElemento()).append(",");
         * while (atual.getProximo() != null) {
         * atual = atual.getProximo();
         * builder.append(atual.getElemento()).append(",");
         * }
         */

        return builder.toString();
    }
}